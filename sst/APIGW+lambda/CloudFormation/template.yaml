Resources:
  SSTMetadata:
    Type: 'AWS::CDK::Metadata'
    Metadata:
      'aws:cdk:path': prod-graphql-apollo-MyStack/SSTMetadata
      'sst:version': 1.1.2
      'sst:constructs':
        - id: ApolloApi
          addr: c82d4411d7948d9452c6e1cc69feaacdc3d88d06f7
          stack: prod-graphql-apollo-MyStack
          type: Api
          data:
            graphql: true
            url: !Join 
              - ''
              - - 'https://'
                - !Ref ApolloApi5C946078
                - .execute-api.us-east-1.
                - !Ref 'AWS::URLSuffix'
                - /
            httpApiId: !Ref ApolloApi5C946078
            routes:
              - route: GET /
                fn:
                  node: c8f33678611bc66f2b83ad67590e6f0969d566d158
                  stack: prod-graphql-apollo-MyStack
        - id: Lambda_GET_--
          addr: c8f33678611bc66f2b83ad67590e6f0969d566d158
          stack: prod-graphql-apollo-MyStack
          type: Function
          data:
            localId: prod-graphql-apollo-MyStack-ApolloApi-Lambda_GET_-
            arn: !GetAtt 
              - ApolloApiLambdaGET95C28312
              - Arn
  ApolloApi5C946078:
    Type: 'AWS::ApiGatewayV2::Api'
    Properties:
      CorsConfiguration:
        AllowHeaders:
          - '*'
        AllowMethods:
          - '*'
        AllowOrigins:
          - '*'
      Name: prod-graphql-apollo-ApolloApi
      ProtocolType: HTTP
      Tags:
        'sst:app': graphql-apollo
        'sst:stage': prod
    Metadata:
      'aws:cdk:path': prod-graphql-apollo-MyStack/ApolloApi/Api/Resource
  ApolloApiDefaultStage79B12598:
    Type: 'AWS::ApiGatewayV2::Stage'
    Properties:
      ApiId: !Ref ApolloApi5C946078
      StageName: $default
      AccessLogSettings:
        DestinationArn: !GetAtt 
          - ApolloApiLogGroup0BBE3968
          - Arn
        Format: >-
          {"requestTime":"$context.requestTime","requestId":"$context.requestId","httpMethod":"$context.httpMethod","path":"$context.path","routeKey":"$context.routeKey","status":$context.status,"responseLatency":$context.responseLatency,"integrationRequestId":"$context.integration.requestId","integrationStatus":"$context.integration.status","integrationLatency":"$context.integration.latency","integrationServiceStatus":"$context.integration.integrationStatus","ip":"$context.identity.sourceIp","userAgent":"$context.identity.userAgent","cognitoIdentityId":"$context.identity.cognitoIdentityId"}
      AutoDeploy: true
      Tags:
        'sst:app': graphql-apollo
        'sst:stage': prod
    Metadata:
      'aws:cdk:path': prod-graphql-apollo-MyStack/ApolloApi/Api/DefaultStage/Resource
  ApolloApiLogGroup0BBE3968:
    Type: 'AWS::Logs::LogGroup'
    Properties:
      LogGroupName: !Join 
        - ''
        - - /aws/vendedlogs/apis/prod-graphql-apollo-ApolloApi-
          - !Ref ApolloApi5C946078
          - /default
      Tags:
        - Key: 'sst:app'
          Value: graphql-apollo
        - Key: 'sst:stage'
          Value: prod
    UpdateReplacePolicy: Retain
    DeletionPolicy: Retain
    Metadata:
      'aws:cdk:path': prod-graphql-apollo-MyStack/ApolloApi/LogGroup/Resource
  ApolloApiLambdaGETServiceRole5B3E2A44:
    Type: 'AWS::IAM::Role'
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: 'sts:AssumeRole'
            Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
        Version: 2012-10-17
      ManagedPolicyArns:
        - !Join 
          - ''
          - - 'arn:'
            - !Ref 'AWS::Partition'
            - ':iam::aws:policy/service-role/AWSLambdaBasicExecutionRole'
      Tags:
        - Key: 'sst:app'
          Value: graphql-apollo
        - Key: 'sst:stage'
          Value: prod
    Metadata:
      'aws:cdk:path': prod-graphql-apollo-MyStack/ApolloApi/Lambda_GET_--/ServiceRole/Resource
  ApolloApiLambdaGETServiceRoleDefaultPolicy09933A25:
    Type: 'AWS::IAM::Policy'
    Properties:
      PolicyDocument:
        Statement:
          - Action:
              - 'xray:PutTraceSegments'
              - 'xray:PutTelemetryRecords'
            Effect: Allow
            Resource: '*'
        Version: 2012-10-17
      PolicyName: ApolloApiLambdaGETServiceRoleDefaultPolicy09933A25
      Roles:
        - !Ref ApolloApiLambdaGETServiceRole5B3E2A44
    Metadata:
      'aws:cdk:path': >-
        prod-graphql-apollo-MyStack/ApolloApi/Lambda_GET_--/ServiceRole/DefaultPolicy/Resource
  ApolloApiLambdaGET95C28312:
    Type: 'AWS::Lambda::Function'
    Properties:
      Code:
        S3Bucket: cdk-hnb659fds-assets-YOUR_ACCOUNT-us-east-1
        S3Key: 024fdeda6d1dbf5fb0f02d9cf9c0b1c2b168a7e2f97b370196f28db5c50804a2.zip
      Role: !GetAtt 
        - ApolloApiLambdaGETServiceRole5B3E2A44
        - Arn
      Environment:
        Variables:
          AWS_NODEJS_CONNECTION_REUSE_ENABLED: '1'
      EphemeralStorage:
        Size: 512
      Handler: backend/functions/lambda.handler
      MemorySize: 1024
      Runtime: nodejs16.x
      Tags:
        - Key: 'sst:app'
          Value: graphql-apollo
        - Key: 'sst:stage'
          Value: prod
      Timeout: 10
      TracingConfig:
        Mode: Active
    DependsOn:
      - ApolloApiLambdaGETServiceRoleDefaultPolicy09933A25
      - ApolloApiLambdaGETServiceRole5B3E2A44
    Metadata:
      'aws:cdk:path': prod-graphql-apollo-MyStack/ApolloApi/Lambda_GET_--/Resource
      'aws:asset:path': asset.024fdeda6d1dbf5fb0f02d9cf9c0b1c2b168a7e2f97b370196f28db5c50804a2
      'aws:asset:is-bundled': false
      'aws:asset:property': Code
  ApolloApiRouteGETIntegrationGETB8F154D1:
    Type: 'AWS::ApiGatewayV2::Integration'
    Properties:
      ApiId: !Ref ApolloApi5C946078
      IntegrationType: AWS_PROXY
      IntegrationUri: !GetAtt 
        - ApolloApiLambdaGET95C28312
        - Arn
      PayloadFormatVersion: '2.0'
    Metadata:
      'aws:cdk:path': >-
        prod-graphql-apollo-MyStack/ApolloApi/Route_GET_--/Integration_GET_--/Resource
  ApolloApiRouteGETIntegrationGETPermission80C248D0:
    Type: 'AWS::Lambda::Permission'
    Properties:
      Action: 'lambda:InvokeFunction'
      FunctionName: !GetAtt 
        - ApolloApiLambdaGET95C28312
        - Arn
      Principal: apigateway.amazonaws.com
      SourceArn: !Join 
        - ''
        - - 'arn:'
          - !Ref 'AWS::Partition'
          - ':execute-api:us-east-1:YOUR_ACCOUNT:'
          - !Ref ApolloApi5C946078
          - /*/*/
    Metadata:
      'aws:cdk:path': >-
        prod-graphql-apollo-MyStack/ApolloApi/Route_GET_--/Integration_GET_---Permission
  ApolloApiRouteGETC299FDD3:
    Type: 'AWS::ApiGatewayV2::Route'
    Properties:
      ApiId: !Ref ApolloApi5C946078
      RouteKey: GET /
      AuthorizationType: NONE
      Target: !Join 
        - ''
        - - integrations/
          - !Ref ApolloApiRouteGETIntegrationGETB8F154D1
    Metadata:
      'aws:cdk:path': prod-graphql-apollo-MyStack/ApolloApi/Route_GET_--/Resource
  ApolloApiRoutePOSTIntegrationGETPermission5C2DE9ED:
    Type: 'AWS::Lambda::Permission'
    Properties:
      Action: 'lambda:InvokeFunction'
      FunctionName: !GetAtt 
        - ApolloApiLambdaGET95C28312
        - Arn
      Principal: apigateway.amazonaws.com
      SourceArn: !Join 
        - ''
        - - 'arn:'
          - !Ref 'AWS::Partition'
          - ':execute-api:us-east-1:YOUR_ACCOUNT:'
          - !Ref ApolloApi5C946078
          - /*/*/
    Metadata:
      'aws:cdk:path': >-
        prod-graphql-apollo-MyStack/ApolloApi/Route_POST_--/Integration_GET_---Permission
  ApolloApiRoutePOST10C3242B:
    Type: 'AWS::ApiGatewayV2::Route'
    Properties:
      ApiId: !Ref ApolloApi5C946078
      RouteKey: POST /
      AuthorizationType: NONE
      Target: !Join 
        - ''
        - - integrations/
          - !Ref ApolloApiRouteGETIntegrationGETB8F154D1
    Metadata:
      'aws:cdk:path': prod-graphql-apollo-MyStack/ApolloApi/Route_POST_--/Resource
Outputs:
  ApiEndpoint:
    Value: !GetAtt 
      - ApolloApi5C946078
      - ApiEndpoint
Parameters:
  BootstrapVersion:
    Type: 'AWS::SSM::Parameter::Value<String>'
    Default: /cdk-bootstrap/hnb659fds/version
    Description: >-
      Version of the CDK Bootstrap resources in this environment, automatically
      retrieved from SSM Parameter Store. [cdk:skip]
Rules:
  CheckBootstrapVersion:
    Assertions:
      - Assert: !Not 
          - 'Fn::Contains':
              - - '1'
                - '2'
                - '3'
                - '4'
                - '5'
              - !Ref BootstrapVersion
        AssertDescription: >-
          CDK bootstrap stack version 6 required. Please run 'cdk bootstrap'
          with a recent version of the CDK CLI.
